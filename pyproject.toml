[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "lime-survey-analyzer"
dynamic = ["version"]
description = "A comprehensive Python package for LimeSurvey API integration and survey analysis"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "LimeSurvey Analyzer Team", email = "info@example.com"},
]
keywords = ["limesurvey", "survey", "analysis", "api", "data-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
requires-python = ">=3.8"

dependencies = [
    "requests>=2.25.0",
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "tabulate>=0.8.9",
]

[project.optional-dependencies]
dev = [
    # Type checking
    "mypy>=1.0.0",
    "types-requests>=2.25.0",
    "types-tabulate>=0.8.9",
    
    # Testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",  # For parallel testing
    "coverage>=6.0.0",
    
    # Code quality
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "pre-commit>=2.20.0",
    
    # Documentation
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    
    # Utilities
    "ipython>=8.0.0",
    "jupyter>=1.0.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/your-org/lime-survey-analyzer"
Documentation = "https://lime-survey-analyzer.readthedocs.io"
Repository = "https://github.com/your-org/lime-survey-analyzer.git"
Issues = "https://github.com/your-org/lime-survey-analyzer/issues"

[tool.setuptools]
packages = ["lime_survey_analyzer"]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = {attr = "lime_survey_analyzer.__version__"}

[tool.setuptools_scm]
write_to = "src/lime_survey_analyzer/_version.py"

# Type checking configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "tabulate.*",
]
ignore_missing_imports = true

# Testing configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "src/lime_survey_analyzer/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Code formatting
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["lime_survey_analyzer"]
known_third_party = ["pandas", "numpy", "matplotlib", "seaborn", "plotly", "requests"]

# Linting
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    "*.egg-info",
] 