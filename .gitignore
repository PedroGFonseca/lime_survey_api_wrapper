# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints
*.ipynb

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to exclude the entire .idea directory from version control:
.idea/

# Project-specific files
credentials.ini
config.ini
*.log

# SECURITY: Credential and test files - NEVER COMMIT
test_credentials.ini
test_config.ini
real_test.py
integration_test.py
live_test.py
secrets.ini
auth.ini
.env.local
.env.test
*_credentials*
*_secrets*
*for_testing_only*
*.key
*.pem
*.p12
*.pfx
config_*.ini
creds_*.ini
login_*.ini
auth_*.json
secret_*.json
private_*.json
api_keys.txt
passwords.txt
tokens.txt
*_token*
*_key*
*_auth.json
*_auth.ini
*_auth.txt
*_login*

# SECRETS DIRECTORY: Never commit actual credentials - SECURITY CRITICAL
secrets/credentials.ini
secrets/config.ini
secrets/*.ini
secrets/*.json
secrets/*.txt
secrets/*.key
secrets/*.pem
secrets/*.p12
secrets/*.pfx
secrets/*_auth*
secrets/*_creds*
secrets/*_login*
secrets/*_secret*
secrets/*_token*
secrets/*_key*

# SURVEY DATA PROTECTION: Never commit actual survey data - PRIVACY CRITICAL
# ========================================================================

# Real survey data patterns (by survey ID)
*survey_291558*
*291558*
survey_[0-9]*/
survey_[0-9][0-9][0-9][0-9][0-9][0-9]/
*_survey_[0-9]*
*_[0-9][0-9][0-9][0-9][0-9][0-9]*

# Survey response and analysis files
*survey_data*
*_survey_data*
*survey_responses*
*_survey_responses*
*responses*
*_responses*
*ground_truth*
*_ground_truth*
*participant*
*_participant*
survey_*.csv
survey_*.json
survey_*.xlsx
survey_*.xml
response_*.csv
response_*.json
response_*.xlsx
participant_*.csv
participant_*.json
analysis_*.csv
analysis_*.json
results_*.csv
results_*.json

# LimeSurvey export files
*_responses_export*
*_structure_export*
*_participants_export*
*_statistics_export*
lime_survey_export_*
limesurvey_export_*
export_survey_*

# Cached survey data and API responses
survey_cache/
response_cache/
api_cache/
.survey_cache/
.response_cache/
.api_cache/
*_cache_[0-9]*
cache_survey_[0-9]*/
cached_responses_*
cached_survey_*

# Real data test files (local development only)
*_real_data*
*_live_data*
*_production_data*
*_real_survey*
*_live_survey*
test_real_*
test_live_*
*_real_test*
*_live_test*
real_data_*
live_data_*

# Analysis outputs with potentially sensitive data
*_analysis_output*
*_analysis_results*
*_statistical_analysis*
*_cross_analysis*
*_survey_analysis*
human_readable_*
advanced_analysis.*
comprehensive_analysis.*

# Personal/sensitive notes and documentation
*_personal_notes*
*_sensitive*
*_confidential*
*_private*
*_internal*
*CONFIDENTIAL*
*SENSITIVE*
*PRIVATE*

# Development and backup files
*_original.*
*_backup.*
*_old.*
*_copy.*
marked_for_deletion/
temp/
tmp/

# OS-specific files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Editor files
*.swp
*.swo
*~ 

# Local testing files with real credentials (DO NOT COMMIT)
comprehensive_test_example.py
validate_mappings_real_data.py
*_real_data_test.py
*_live_test.py

# Survey data exports from testing
survey_*_logic.json
survey_*_responses.json
survey_*_data.json
mapping_validation_report_*.json

# Cached API responses for debugging (should not be committed)
real_data/

# DEVELOPMENT FILES: Complex analysis and mapping files not part of core API
analyze_*.py
cache_*.py
debug_*.py
validate_*.py
investigate_*.py
comprehensive_*.py
*_analysis.py
*_validation.py
*_mapping*.py
*_report*.json
*_analysis*.json
hybrid_response_mapper.py
abbreviated_response_mapper.py
sgqa_response_mapper.py
survey_mapping_analysis_notebook.py
test_heading_types.py
complexity_analysis.py
setup_dev.py

# Documentation that's not for end users
CODE_QUALITY_ASSESSMENT.md
REFACTORING_SUMMARY.md
TESTING_README.md
TEST_RESULTS.md
ANALYSIS.md
quick_test.py

# Question options cache
.question_cache/
*_question_cache/
question_cache_*/
*.cache.json
*.cache.pickle 
# Test results (local only)
test_results_local/

# Survey data cache
cache_survey_data/

# Obsolete/deprecated code files
obs/
